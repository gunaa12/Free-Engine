{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\ReadInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.txt';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data_points;\n\nfunction ReadInput() {\n  _s();\n\n  const [csvData, setCsvData] = useState(undefined);\n  const [tokens, setToken] = useState();\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      const lines = text.split(\"\\n\");\n      lines.map((line, index) => {\n        let tokens = line.split(\",\");\n        setToken(tokens);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gcse-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), tokens.map(token => {\n      return /*#__PURE__*/_jsxDEV(App, {\n        name: tokens\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadInput, \"ZUrDwYiTGaB3toWFd/DwZhBPkkQ=\");\n\n_c = ReadInput;\n\nfunction renderApps() {\n  fetch(raw).then(r => r.text()).then(text => {\n    text.split(\"\\n\").map(({\n      line\n    }) => {\n      console.log(typeof line);\n      console.log(line);\n      const tokens = line.split(\",\");\n\n      /*#__PURE__*/\n      _jsxDEV(App, {\n        name: tokens[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    });\n  });\n}\n\nexport default ReadInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadInput\");","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/ReadInput.js"],"names":["React","useState","useEffect","raw","App","data_points","ReadInput","csvData","setCsvData","undefined","tokens","setToken","fetch","then","r","text","lines","split","map","line","index","token","renderApps","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAIC,WAAJ;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACQ,SAAD,CAAtC;AAEA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBV,QAAQ,EAAnC;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,KAAK,CAACT,GAAD,CAAL,CACCU,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,YAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;AACAD,MAAAA,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,YAAIV,MAAM,GAAGS,IAAI,CAACF,KAAL,CAAW,GAAX,CAAb;AACDN,QAAAA,QAAQ,CAACD,MAAD,CAAR;AACF,OAHD;AAIH,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQA,MAAM,CAACQ,GAAP,CAAYG,KAAD,IAAW;AAClB,0BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAIX;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,CAHR,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA/BQJ,S;;KAAAA,S;;AAiCT,SAASgB,UAAT,GAAsB;AAClBV,EAAAA,KAAK,CAACT,GAAD,CAAL,CAAWU,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,EACCF,IADD,CACME,IAAI,IAAI;AACVA,IAAAA,IAAI,CAACE,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAqB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACjCI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOL,IAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,YAAMT,MAAM,GAAGS,IAAI,CAACF,KAAL,CAAW,GAAX,CAAf;;AACI;AAAA,cAAC,GAAD;AAAK,QAAA,IAAI,EAAIP,MAAM,CAAC,CAAD;AAAnB;AAAA;AAAA;AAAA;AAAA;AACH,KALD;AAMH,GARD;AASH;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport raw from './data.txt';\r\nimport App from './App';\r\n\r\nlet data_points;\r\n\r\nfunction ReadInput(){\r\n    const [csvData, setCsvData] = useState(undefined);\r\n\r\n    const [tokens, setToken] = useState()\r\n\r\n\r\n    useEffect( () => {\r\n        fetch(raw)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n            const lines = text.split(\"\\n\");\r\n            lines.map((line, index) => {\r\n                let tokens = line.split(\",\");\r\n               setToken(tokens)\r\n            })\r\n        }) \r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"gcse-search\"/>\r\n            {\r\n                tokens.map((token) => {\r\n                    return(\r\n                        <App name = {tokens}/>\r\n                    );\r\n                })\r\n            }\r\n            <p>hello</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderApps() {\r\n    fetch(raw).then(r => r.text())\r\n    .then(text => {\r\n        text.split(\"\\n\").map(({line}) => {\r\n        console.log(typeof(line));\r\n        console.log(line);\r\n        const tokens = line.split(\",\");\r\n            <App name = {tokens[0]}/>\r\n        });\r\n    })\r\n}\r\n\r\nexport default ReadInput;"]},"metadata":{},"sourceType":"module"}