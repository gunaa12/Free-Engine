{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.csv';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(CsvReader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Home;\n\nfunction read() {\n  _s();\n\n  const [csvData, setCsvData] = useState(undefined);\n  const csvFile = './data.txt';\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      const lines = text.split(\"\\n\");\n      let data_points = [lines.length - 1];\n\n      for (let line_num = 1; line_num < lines.lenght; line_num++) {\n        data_points[line_num - 1] = lines[line_num].split(\",\");\n      }\n\n      for (let index = 0; index < data_points.length; index++) {\n        for (let inner_index = 0; inner_index < data_points[index].lenght; inner_index++) {\n          console.log(data_points[index][inner_index] + \"hello\");\n        }\n      }\n\n      setCsvData(text);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gcse-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), csvData ? csvData : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(read, \"EJIWd5ZpLuk5R8CLGEOcPpK2km4=\");\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/Home.js"],"names":["useState","useEffect","raw","Home","read","csvData","setCsvData","undefined","csvFile","fetch","then","r","text","lines","split","data_points","length","line_num","lenght","index","inner_index","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,aAAP;;;AAEA,SAASC,IAAT,GAAgB;AACd,sBACE;AAAK,IAAA,EAAE,EAAG,MAAV;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVQA,I;;AAYT,SAASC,IAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACO,SAAD,CAAtC;AACA,QAAMC,OAAO,GAAG,YAAhB;AAEAP,EAAAA,SAAS,CAAE,MAAM;AACbQ,IAAAA,KAAK,CAACP,GAAD,CAAL,CACCQ,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,YAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;AACA,UAAIC,WAAW,GAAG,CAACF,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAlB;;AACA,WAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGJ,KAAK,CAACK,MAAxC,EAAgDD,QAAQ,EAAxD,EAA4D;AACxDF,QAAAA,WAAW,CAACE,QAAQ,GAAG,CAAZ,CAAX,GAA4BJ,KAAK,CAACI,QAAD,CAAL,CAAgBH,KAAhB,CAAsB,GAAtB,CAA5B;AACH;;AACD,WAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,WAAW,CAACC,MAAxC,EAAgDG,KAAK,EAArD,EAAyD;AACrD,aAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGL,WAAW,CAACI,KAAD,CAAX,CAAmBD,MAA3D,EAAmEE,WAAW,EAA9E,EAAkF;AAC9EC,UAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACI,KAAD,CAAX,CAAmBC,WAAnB,IAAkC,OAA9C;AACH;AACJ;;AACDd,MAAAA,UAAU,CAACM,IAAD,CAAV;AACH,KAdD;AAeH,GAhBQ,CAAT;AAkBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKP,OAAO,GAAGA,OAAH,GAAY,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;GA9BQD,I;;AAgCT,eAAeD,IAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.csv';\n\nimport './index.css';\n\nfunction Home() {\n  return (\n    <div id = \"home\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <CsvReader />\n        </header>\n      </div>\n    </div>\n  );\n}\n\nfunction read(){\n  const [csvData, setCsvData] = useState(undefined);\n  const csvFile = './data.txt';\n\n  useEffect( () => {\n      fetch(raw)\n      .then(r => r.text())\n      .then(text => {\n          const lines = text.split(\"\\n\");\n          let data_points = [lines.length - 1];\n          for (let line_num = 1; line_num < lines.lenght; line_num++) {\n              data_points[line_num - 1] = lines[line_num].split(\",\");\n          }\n          for (let index = 0; index < data_points.length; index++) {\n              for (let inner_index = 0; inner_index < data_points[index].lenght; inner_index++) {\n                  console.log(data_points[index][inner_index] + \"hello\");\n              }\n          }\n          setCsvData(text);\n      })\n  })\n\n  return(\n      <div>\n          <div className=\"gcse-search\">\n          </div>\n          {csvData ? csvData: ''}\n      </div>\n  );\n\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}