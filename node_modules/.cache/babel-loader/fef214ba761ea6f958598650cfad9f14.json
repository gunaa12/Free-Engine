{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\ReadInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data_points;\n\nfunction ReadInput() {\n  _s();\n\n  const [csvData, setCsvData] = useState(undefined);\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      const lines = text.split(\"\\n\");\n\n      for (let line_num = 1; line_num < lines.length; line_num++) {\n        let temp = lines[line_num].split(\",\");\n\n        for (let int = 0; int < 3; int++) {\n          data_points[line_num - 1][int] = temp[int];\n        }\n      }\n\n      for (let index = 0; index < lines.length; index++) {\n        for (let inner_index = 0; inner_index < data_points[index].length; inner_index++) {\n          console.log(data_points[index][inner_index]);\n        }\n      }\n\n      setCsvData(text);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gcse-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), csvData ? csvData : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadInput, \"EJIWd5ZpLuk5R8CLGEOcPpK2km4=\");\n\n_c = ReadInput;\nexport default ReadInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadInput\");","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/ReadInput.js"],"names":["React","useState","useEffect","raw","data_points","ReadInput","csvData","setCsvData","undefined","fetch","then","r","text","lines","split","line_num","length","temp","int","index","inner_index","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,IAAIC,WAAJ;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACO,SAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAE,MAAM;AACbO,IAAAA,KAAK,CAACN,GAAD,CAAL,CACCO,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,YAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;;AACA,WAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGF,KAAK,CAACG,MAAxC,EAAgDD,QAAQ,EAAxD,EAA4D;AACxD,YAAIE,IAAI,GAAGJ,KAAK,CAACE,QAAD,CAAL,CAAgBD,KAAhB,CAAsB,GAAtB,CAAX;;AACA,aAAK,IAAII,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAC9Bd,UAAAA,WAAW,CAACW,QAAQ,GAAG,CAAZ,CAAX,CAA0BG,GAA1B,IAAiCD,IAAI,CAACC,GAAD,CAArC;AACH;AAEJ;;AACD,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,KAAK,CAACG,MAAlC,EAA0CG,KAAK,EAA/C,EAAmD;AAC/C,aAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGhB,WAAW,CAACe,KAAD,CAAX,CAAmBH,MAA3D,EAAmEI,WAAW,EAA9E,EAAkF;AAC9EC,UAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAW,CAACe,KAAD,CAAX,CAAmBC,WAAnB,CAAZ;AACH;AACJ;;AACDb,MAAAA,UAAU,CAACK,IAAD,CAAV;AACH,KAjBD;AAkBH,GAnBQ,CAAT;AAqBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,OAAO,GAAGA,OAAH,GAAY,EAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BQD,S;;KAAAA,S;AAiCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport raw from './data.csv';\r\n\r\nlet data_points;\r\n\r\nfunction ReadInput(){\r\n    const [csvData, setCsvData] = useState(undefined);\r\n\r\n    useEffect( () => {\r\n        fetch(raw)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n            const lines = text.split(\"\\n\");\r\n            for (let line_num = 1; line_num < lines.length; line_num++) {\r\n                let temp = lines[line_num].split(\",\");\r\n                for (let int = 0; int < 3; int++) {\r\n                    data_points[line_num - 1][int] = temp[int];\r\n                }\r\n                \r\n            }\r\n            for (let index = 0; index < lines.length; index++) {\r\n                for (let inner_index = 0; inner_index < data_points[index].length; inner_index++) {\r\n                    console.log(data_points[index][inner_index]);\r\n                }\r\n            }\r\n            setCsvData(text);\r\n        })\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"gcse-search\"/>\r\n            {csvData ? csvData: ''}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ReadInput;"]},"metadata":{},"sourceType":"module"}