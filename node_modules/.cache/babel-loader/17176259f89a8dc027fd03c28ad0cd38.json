{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\ReadInput.js\";\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.txt';\nimport App from './App';\nimport { render } from '@testing-library/react';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ReadInput extends Component {\n  render() {\n    const [csvData, setCsvData] = useState(undefined);\n    const [tokens, setToken] = useState([]);\n    useEffect(() => {\n      fetch(raw).then(r => r.text()).then(text => {\n        console.log(\"async\");\n        const lines = text.split(\"\\n\");\n        lines.map((line, index) => {\n          let newtokens = line.split(\",\");\n          console.log(tokens);\n          const to = tokens;\n          to.push(newtokens); // tokens.push(newtokens);\n\n          setToken(to);\n        });\n        render();\n      });\n      console.log(\"useEffect\");\n    }, []);\n    setTimeout(3000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gcse-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), tokens && tokens.map(words => {\n        console.group(tokens.length);\n        return words.map(word => {\n          return /*#__PURE__*/_jsxDEV(App, {\n            name: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this);\n        });\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/ReadInput.js"],"names":["React","useState","useEffect","raw","App","render","Component","ReadInput","csvData","setCsvData","undefined","tokens","setToken","fetch","then","r","text","console","log","lines","split","map","line","index","newtokens","to","push","setTimeout","words","group","length","word"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC7CD,EAAAA,MAAM,GAAG;AACL,UAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACS,SAAD,CAAtC;AAEJ,UAAM,CAACC,MAAD,EAASC,QAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AAGAC,IAAAA,SAAS,CAAE,MAAM;AACbW,MAAAA,KAAK,CAACV,GAAD,CAAL,CACCW,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,CAAd;AACAD,QAAAA,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,cAAIC,SAAS,GAAGF,IAAI,CAACF,KAAL,CAAW,GAAX,CAAhB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,gBAAMc,EAAE,GAAGd,MAAX;AACAc,UAAAA,EAAE,CAACC,IAAH,CAAQF,SAAR,EALuB,CAMvB;;AACDZ,UAAAA,QAAQ,CAACa,EAAD,CAAR;AACF,SARD;AASApB,QAAAA,MAAM;AACT,OAfD;AAgBAY,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAlBQ,EAkBP,EAlBO,CAAT;AAoBAS,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQhB,MAAM,IAAIA,MAAM,CAACU,GAAP,CAAYO,KAAD,IAAW;AAC5BX,QAAAA,OAAO,CAACY,KAAR,CAAclB,MAAM,CAACmB,MAArB;AACA,eACIF,KAAK,CAACP,GAAN,CAAWU,IAAD,IAAU;AACpB,8BACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAIA;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGC,SAJD,CADJ;AAOH,OATS,CAHlB,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBC;;AA/C4C","sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport raw from './data.txt';\r\nimport App from './App';\r\nimport { render } from '@testing-library/react';\r\nimport {Component} from 'react';\r\n\r\nexport default class ReadInput extends Component {\r\n    render() {\r\n        const [csvData, setCsvData] = useState(undefined);\r\n\r\n    const [tokens, setToken] = useState([])\r\n\r\n\r\n    useEffect( () => {\r\n        fetch(raw)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n            console.log(\"async\")\r\n            const lines = text.split(\"\\n\");\r\n            lines.map((line, index) => {\r\n                let newtokens = line.split(\",\");\r\n                console.log(tokens);\r\n\r\n                const to = tokens\r\n                to.push(newtokens)\r\n                // tokens.push(newtokens);\r\n               setToken(to)\r\n            })\r\n            render();\r\n        }) \r\n        console.log(\"useEffect\")\r\n    },[])\r\n\r\n    setTimeout(3000)\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"gcse-search\"/>\r\n            {\r\n                tokens && tokens.map((words) => {\r\n                    console.group(tokens.length)\r\n                    return (\r\n                        words.map((word) => {\r\n                        return(\r\n                            <App name = {word}/>\r\n                        );\r\n                        })\r\n                    );\r\n                })\r\n            }\r\n            <p>hello</p>\r\n        </div>\r\n    );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}