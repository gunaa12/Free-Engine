{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\ReadInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.txt';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data_points;\n\nfunction ReadInput() {\n  _s();\n\n  const [csvData, setCsvData] = useState(undefined);\n  const [tokens, setToken] = useState([]);\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      console.log(\"async\");\n      const lines = text.split(\"\\n\");\n      lines.map((line, index) => {\n        let newtokens = line.split(\",\");\n        console.log(tokens);\n        const to = tokens;\n        to.push(newtokens); // tokens.push(newtokens);\n\n        setToken(to);\n      });\n    });\n    console.log(\"useEffect\");\n  }, []);\n  setTimeout(3000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gcse-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), tokens && tokens.map(words => {\n      console.group(tokens.length);\n      return words.map(word => {\n        return /*#__PURE__*/_jsxDEV(App, {\n          name: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      });\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n} // function renderApps() {\n//     fetch(raw).then(r => r.text())\n//     .then(text => {\n//         text.split(\"\\n\").map(({line}) => {\n//         console.log(typeof(line));\n//         console.log(line);\n//         const tokens = line.split(\",\");\n//             <App name = {tokens[0]}/>\n//         });\n//     })\n// }\n\n\n_s(ReadInput, \"pn0h+YHOaa9ZGh5p5j59ZWriy88=\");\n\n_c = ReadInput;\nexport default ReadInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadInput\");","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/ReadInput.js"],"names":["React","useState","useEffect","raw","App","data_points","ReadInput","csvData","setCsvData","undefined","tokens","setToken","fetch","then","r","text","console","log","lines","split","map","line","index","newtokens","to","push","setTimeout","words","group","length","word"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAIC,WAAJ;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACQ,SAAD,CAAtC;AAEA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,KAAK,CAACT,GAAD,CAAL,CACCU,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,IAAX,CAAd;AACAD,MAAAA,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,YAAIC,SAAS,GAAGF,IAAI,CAACF,KAAL,CAAW,GAAX,CAAhB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,cAAMc,EAAE,GAAGd,MAAX;AACAc,QAAAA,EAAE,CAACC,IAAH,CAAQF,SAAR,EALuB,CAMvB;;AACDZ,QAAAA,QAAQ,CAACa,EAAD,CAAR;AACF,OARD;AASH,KAdD;AAeAR,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAjBQ,EAiBP,EAjBO,CAAT;AAmBAS,EAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQhB,MAAM,IAAIA,MAAM,CAACU,GAAP,CAAYO,KAAD,IAAW;AAC5BX,MAAAA,OAAO,CAACY,KAAR,CAAclB,MAAM,CAACmB,MAArB;AACA,aACIF,KAAK,CAACP,GAAN,CAAWU,IAAD,IAAU;AACpB,4BACI,QAAC,GAAD;AAAK,UAAA,IAAI,EAAIA;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGC,OAJD,CADJ;AAOH,KATS,CAHlB,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzDSxB,S;;KAAAA,S;AA2DT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport raw from './data.txt';\r\nimport App from './App';\r\n\r\nlet data_points;\r\n\r\nfunction ReadInput(){\r\n    const [csvData, setCsvData] = useState(undefined);\r\n\r\n    const [tokens, setToken] = useState([])\r\n\r\n\r\n    useEffect( () => {\r\n        fetch(raw)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n            console.log(\"async\")\r\n            const lines = text.split(\"\\n\");\r\n            lines.map((line, index) => {\r\n                let newtokens = line.split(\",\");\r\n                console.log(tokens);\r\n\r\n                const to = tokens\r\n                to.push(newtokens)\r\n                // tokens.push(newtokens);\r\n               setToken(to)\r\n            })\r\n        }) \r\n        console.log(\"useEffect\")\r\n    },[])\r\n\r\n    setTimeout(3000)\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"gcse-search\"/>\r\n            {\r\n                tokens && tokens.map((words) => {\r\n                    console.group(tokens.length)\r\n                    return (\r\n                        words.map((word) => {\r\n                        return(\r\n                            <App name = {word}/>\r\n                        );\r\n                        })\r\n                    );\r\n                })\r\n            }\r\n            <p>hello</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// function renderApps() {\r\n//     fetch(raw).then(r => r.text())\r\n//     .then(text => {\r\n//         text.split(\"\\n\").map(({line}) => {\r\n//         console.log(typeof(line));\r\n//         console.log(line);\r\n//         const tokens = line.split(\",\");\r\n//             <App name = {tokens[0]}/>\r\n//         });\r\n//     })\r\n// }\r\n\r\nexport default ReadInput;"]},"metadata":{},"sourceType":"module"}