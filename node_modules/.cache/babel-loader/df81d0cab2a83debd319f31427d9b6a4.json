{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunav\\\\Desktop\\\\Free-Engine\\\\src\\\\base\\\\readInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport raw from './data.csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function readInput() {\n  _s();\n\n  const [csvData, setCsvData] = useState(undefined);\n  const csvFile = './data.csv';\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      const lines = text.split(\"\\n\");\n      let data_points = [lines.length - 1];\n\n      for (let line_num = 1; line_num < lines.lenght; line_num++) {\n        data_points[line_num - 1] = lines[line_num].split(\",\");\n      }\n\n      setCsvData(text);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gcse-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), csvData ? csvData : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(readInput, \"EJIWd5ZpLuk5R8CLGEOcPpK2km4=\");","map":{"version":3,"sources":["C:/Users/gunav/Desktop/Free-Engine/src/base/readInput.js"],"names":["useState","useEffect","raw","readInput","csvData","setCsvData","undefined","csvFile","fetch","then","r","text","lines","split","data_points","length","line_num","lenght"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACM,SAAD,CAAtC;AACA,QAAMC,OAAO,GAAG,YAAhB;AAEAN,EAAAA,SAAS,CAAE,MAAM;AACbO,IAAAA,KAAK,CAACN,GAAD,CAAL,CACCO,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,YAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;AACA,UAAIC,WAAW,GAAG,CAACF,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAlB;;AACA,WAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGJ,KAAK,CAACK,MAAxC,EAAgDD,QAAQ,EAAxD,EAA4D;AACxDF,QAAAA,WAAW,CAACE,QAAQ,GAAG,CAAZ,CAAX,GAA4BJ,KAAK,CAACI,QAAD,CAAL,CAAgBH,KAAhB,CAAsB,GAAtB,CAA5B;AACH;;AACDR,MAAAA,UAAU,CAACM,IAAD,CAAV;AACH,KATD;AAUH,GAXQ,CAAT;AAaA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKP,OAAO,GAAGA,OAAH,GAAY,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAzBuBD,S","sourcesContent":["import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport raw from './data.csv';\r\n\r\nexport default function readInput(){\r\n    const [csvData, setCsvData] = useState(undefined);\r\n    const csvFile = './data.csv';\r\n\r\n    useEffect( () => {\r\n        fetch(raw)\r\n        .then(r => r.text())\r\n        .then(text => {\r\n            const lines = text.split(\"\\n\");\r\n            let data_points = [lines.length - 1];\r\n            for (let line_num = 1; line_num < lines.lenght; line_num++) {\r\n                data_points[line_num - 1] = lines[line_num].split(\",\");\r\n            }\r\n            setCsvData(text);\r\n        })\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"gcse-search\">\r\n            </div>\r\n            {csvData ? csvData: ''}\r\n        </div>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}